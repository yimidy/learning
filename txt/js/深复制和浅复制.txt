浅复制： 对对象的引用（同一对象）

深复制： 拷贝对象实例，相互值的改变不影响对方

赋值：一般对基本数据类型是深复制，对引用数据类型是浅复制


实现（对对象来说）：
	浅复制：
		1. 直接赋值
			obj2 = obj1
		2. ES6的Object.assign(目标对象，...多个要复制的原对象)
			Object.assign(obj2,obj1)
			要求：被复制的对象里各个属性值也要是对象
	深复制：
		1. 拷贝
			function deepCopy(obj1,obj2){
				obj2 = obj2 || {};
				for(var i in obj1){
					if(JSON.stringify(obj1[i]) != JSON.stringify(obj2)) {            
      						if(typeof obj1[i]==="object"){
							obj2[i] = (obj1[i] instanceof Array)?[]:{};
							deepCopy(obj1[i],obj2[i]);
						}else{
							obj2[i] = obj1[i];
						}
    					} 
				}
			}
		2. ES6的Object.assign(目标对象，...多个要复制的源对象)
			Object.assign(obj2,obj1)
			要求：被复制的对象里各个属性值是基本数据类型
		3. 转换成JSON再转换回来
			var obj2 = JSON.parse(JSON.stringify(obj1));
		4. jquery的$.extend(是否深度拷贝，目标对象，...多个要复制的源对象)
			var obj2 = $.extend(true, {}, obj1);
		5.函数库“lodash”，里有方法cloneDeep
			var _ = require('lodash');
			var obj2 = _.cloneDeep(obj1);


