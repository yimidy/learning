作用域（scope），基于函数，涉及到所被调用函数的变量、参数和函数声明。

上下文（context），基于对象，始终是this关键字的值。
	在浏览器全局变量中，默认window；ES5的严格模式下，此时默认上下文为undefined。


执行环境，js是一个单线程的语言，意味同一时间只能执行一个任务。js解释器初始执行代码，默认进入全局环境，当执行流进入一个函数时，建立一个新的执行环境，该环境被推入到环境栈中，执行完毕后回溯到上一个执行环境。

	执行环境分为2部分：创建和执行
		创建阶段，会创建一个变量对象（活动对象activetion object），它有执行环境中的参数，变量和函数声明组成。在这个阶段，作用域链被初始化，this指针也确立。
		执行阶段，代码被解释执行。

作用域链，从window对象向前延伸，最顶端总是当前正在执行的作用域，它的this指针指向当前的活动对象（环境栈）。作用链用途保证对执行环境有权访问的所以变量和函数的有序访问。就是从当前作用域出发，在当前作用域中没有找到相应变量和函数会返回上一级作用域中去查找，直到window。


js的运行机制：
	1. 读入第一个代码段（js执行引擎并发一行一行执行，而是一段一段执行）
	2. 做语法分析，有错报错并跳转到5
	3. 对var变量和function进行预解析
	4. 逐行编译执行
	5. 如果还有下个代码段，读入，重复2，3,4
	6. end


自由变量，在一个作用域中可以访问到该作用域没有的变量，这个变量就是自由变量。
