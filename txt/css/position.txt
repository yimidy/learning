定位，有6个属性

static
	默认值，无定位，正常文档流中

relative
	相对定位，相对自身位置偏移
	一般用于微调和子绝父相

absolute
	绝对定位，相对于最近有定位的父级元素的位置偏移（相对于盒子定位，从border内侧开始，无视padding）
	性质：
		脱离文档流，破坏性（导致父元素高度崩塌）
		包裹性
		跟随性，不设置left等位置不变
		悬浮于页面上方
	一般用于盒子居中
		position:absolute;
		left:50%;
		margin-left:-(width/2)px;
	注意：
		设置改属性会使inline元素块化
		设置改属性会使浮动失效

fixed
	固定定位，相当于浏览器窗口偏移，会脱离文档流
	一般用于网页右下角“返回顶部”，顶部导航条

inherit
	会从父级继承定位

sticky（新特性）

　　position属性中最有意思的就是sticky了，设置了sticky的元素，在屏幕范围（viewport）时该元素的位置并不受到定位影响（设置是top、left等属性无效），当该元素的位置将要移出偏移范围时，定位又会变成fixed，根据设置的left、top等属性成固定位置的效果。

　　可以知道sticky属性有以下几个特点：

	该元素并不脱离文档流，仍然保留元素原本在文档流中的位置。
	当元素在容器中被滚动超过指定的偏移值时，元素在容器内固定在指定位置。亦即如果你设置了top: 50px，那么在sticky元素到达距离相对定位的元素顶部50px的位置时固定，不再向上移动。元素固定的相对偏移是相对于离它最近的具有滚动框的祖先元素，如果祖先元素都不可以滚动，那么是相对于viewport来计算元素的偏移量。
	这个属性的兼容性还不是很好，目前仍是一个试验性的属性，并不是W3C推荐的标准。它之所以会出现，也是因为监听scroll事件来实现粘性布局使浏览器进入慢滚动的模式，这与浏览器想要通过硬件加速来提升滚动的体验是相悖的。






只有定位的元素，才有z-index；浮动元素不能使用；从父现象




